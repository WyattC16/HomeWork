@using HomeWork.Web.Models.Enum
@model IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}
@functions
{
private static string GetBorderBackgroundColor(DateTime dueDate, Status status) =>
    status == Status.Submitted ? "white" :
        dueDate.Date <= DateTime.Today.Date ? "red" :
            dueDate.Date <= DateTime.Today.AddDays(7).Date ? "yellow" :
                dueDate.Date <= DateTime.Today.AddMonths(1).Date ? "green" :
                    "blue";
private static string SelectedOption(Status status, Status status2) =>
    status.Equals(status2) ? "selected" : "";
private static string FormatStatus(Status status) =>
    status.ToString("F").SplitByUpperCase().Join(" ").ToProper();

private Semester _semester;
private Semester Semester => _semester ?? (_semester = Model.Semester);
}
<div class="row" id="ControlContainer">
    <div id="SearchSemesters" style="width:50%;text-align: left;">
        <select id="Year">
            @if (Model.Semester?.Year == null)
            {
                <option value="null" selected disabled hidden>Select the year to view</option>
            }
            @foreach (var year in Enumerable.Range(
            DateTime.Now.AddYears(-5).Year,
            6).OrderByDescending(x => x))
            {
                if (Model.Semester?.Year != null && Model.Semester.Year == year)
                {
                    <option value="@year" selected="selected">@year</option>
                }
                else
                {
                    <option value="@year">@year</option>
                }
            }
        </select>
        &nbsp;
        <select id="Season">
            @if (string.IsNullOrEmpty(Model.Semester?.Season.ToString("F")))
            {
                <option value="null" selected disabled hidden>Select the season to view</option>
            }
            @foreach (var season in (Seasons[])Enum.GetValues(typeof(Seasons)))
            {
                if (!string.IsNullOrEmpty(Model.Semester?.Season.ToString("F")) &&
                    Model.Semester.Season == season)
                {
                    <option value="@season" selected="selected">@season</option>
                }
                else
                {
                    <option value="@season">@season</option>
                }
            }
        </select>
        &nbsp;
        <input id="Search" type="button"
               onclick="location.href='/'+ document.getElementById('Season').value + '/' + document.getElementById('Year').value;"
               value="Search" />
    </div>
    <div id="SaveSemester" style="width: 50%; text-align: right;">
        <input id="Save" type="button" onclick="saveSemester()" value="Save" />
    </div>
</div>
<div class="tableRow" id="Classes" width="100%">
    @if (@Semester?.Classes != null && Semester.Classes.Any())
    {
        foreach (var table in Semester.Classes)
        {
            <table id="@table.Title" style="display: inline-block; border: 1px solid black;">
                <tbody>
                    <tr id="@(table.Title) Headers">
                        <th contenteditable="true" colspan="2" style="border: 1px solid black;" width:100%>@table.Title</th>
                        <th style="border: 1px solid black;" width:100%>Due Date</th>
                        <th style="border: 1px solid black;" width:100%>Status</th>
                    </tr>
                    @foreach (var homeWork in table.HomeWorks)
                    {
                        <tr id="@homeWork.Title" style="border: 1px solid black; background: @GetBorderBackgroundColor(homeWork.DueDate, homeWork.Status);">
                            <td width:100% style="border: 1px solid black;">
                                <button onclick="deleteRow(this)"></button>
                            </td>
                            <td contenteditable="true" width:100% style="border: 1px solid black;">@homeWork.Title</td>
                            <td width:100% style="border: 1px solid black;">
                                <input type="date" style="border: none; background: @GetBorderBackgroundColor(homeWork.DueDate, homeWork.Status);" value="@homeWork.DueDate.ToString("yyyy-MM-dd")" />
                            </td>
                            <td width:100% style="border: 1px solid black;">
                                <select style="border: none; background: @GetBorderBackgroundColor(homeWork.DueDate, homeWork.Status);">
                                    @foreach (var status in (Status[])Enum.GetValues(typeof(Status)))
                                    {
                                        @:<option @SelectedOption(status, homeWork.Status)> @FormatStatus(status) </option>
                                    }
                                </select>
                            </td>
                        </tr>
                    }
                    <tr style="border: 1px solid black;" width:100%>
                        <td colspan="4">
                            <button onclick="addNewRow(this)">Add new row</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        }
    }
</div>
